CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(TestBench)

INCLUDE(FindPkgConfig)


# assume Release build
IF(NOT DEFINED BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ELSE(NOT DEFINED BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE ${BUILD_TYPE})
ENDIF(NOT DEFINED BUILD_TYPE)

MESSAGE(STATUS "TestBench build type: ${CMAKE_BUILD_TYPE}")


ADD_DEFINITIONS(-std=c++1y)

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
    ADD_DEFINITIONS(-O0 -ggdb -D_DEBUG)
ELSEIF(CMAKE_BUILD_TYPE STREQUAL "Release")
    ADD_DEFINITIONS(-O2 -DNDEBUG)
ENDIF(CMAKE_BUILD_TYPE STREQUAL "Debug")


SET(TESTBENCH_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(TESTBENCH_OUTPUT_DIRECTORY ${TESTBENCH_ROOT_DIRECTORY}/bin/${CMAKE_BUILD_TYPE})

SET(COMMON_DIRECTORY ${TESTBENCH_ROOT_DIRECTORY}/Common)

SET(RENDER_GRAPHS_TARGET RenderGraphs)


MACRO(TESTBENCH_COPY_RESULT TARGET)
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND
                       ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${TARGET}> ${TESTBENCH_OUTPUT_DIRECTORY})
ENDMACRO(TESTBENCH_COPY_RESULT)


ADD_SUBDIRECTORY(Deps)
ADD_SUBDIRECTORY(RenderGraphs)


FILE(MAKE_DIRECTORY ${TESTBENCH_OUTPUT_DIRECTORY})
